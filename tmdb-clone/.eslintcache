[{"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\index.tsx":"1","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\reportWebVitals.ts":"2","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\App.tsx":"3","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MoviesListPage\\index.ts":"4","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MoviesListPage\\MoviesListPage.tsx":"5","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\Login\\index.ts":"6","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\Login\\Login.tsx":"7","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\AuthenticationService.ts":"8","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\TmdbBaseService.ts":"9","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\DiscoverMoviesService.ts":"10","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MoviesListPage\\MoviesList\\MoviesList.tsx":"11","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MoviesListPage\\MoviesOrdering\\MoviesOrdering.tsx":"12","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MoviesListPage\\SearchMovies\\SearchMovies.tsx":"13","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\configuration\\configuration.ts":"14","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\configuration\\genres.ts":"15","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\models\\ReleaseTypes.ts":"16","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\configuration\\countries.ts":"17","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\configuration\\certification.ts":"18","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\configuration\\languages.ts":"19","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MoviesListPage\\MoviesCard\\MoviesCard.tsx":"20","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MovieDetails\\MovieDetails.tsx":"21","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\MovieDetailsService.ts":"22","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\models\\MovieDetails\\ViewModels\\MovieDetailsViewModel.ts":"23","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\components\\Header\\Header.tsx":"24","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\components\\Footer\\Footer.tsx":"25","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\PersonPage\\PersonPage.tsx":"26","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\PersonPageService.ts":"27","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MovieDetails\\index.ts":"28","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\PopularPeoplePage\\index.ts":"29","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\PopularPeoplePage\\PopularPeoplePage.tsx":"30","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\PopularPeopleService.ts":"31","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\SearchService.ts":"32","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\AccountService.ts":"33","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\UserWatchlistPage\\UserWatchlistPage.tsx":"34","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\UserWatchlistPage\\index.ts":"35","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\UserRatingsPage\\index.ts":"36","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\UserRatingsPage\\UserRatingsPage.tsx":"37","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\components\\ProfileMoviesCard\\ProfileMoviesCard.tsx":"38","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\components\\Preloader\\Preloader.tsx":"39","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\UserFavoritesPage\\UserFavoritesPage.tsx":"40"},{"size":523,"mtime":1610354700949,"results":"41","hashOfConfig":"42"},{"size":425,"mtime":499162500000,"results":"43","hashOfConfig":"42"},{"size":1721,"mtime":1612013812556,"results":"44","hashOfConfig":"42"},{"size":45,"mtime":1610055202984,"results":"45","hashOfConfig":"42"},{"size":3684,"mtime":1612018394483,"results":"46","hashOfConfig":"42"},{"size":34,"mtime":1609855466816,"results":"47","hashOfConfig":"42"},{"size":2521,"mtime":1611345993385,"results":"48","hashOfConfig":"42"},{"size":4059,"mtime":1611576224396,"results":"49","hashOfConfig":"42"},{"size":412,"mtime":1611151547747,"results":"50","hashOfConfig":"42"},{"size":2171,"mtime":1612019284138,"results":"51","hashOfConfig":"42"},{"size":586,"mtime":1611748722448,"results":"52","hashOfConfig":"42"},{"size":783,"mtime":1610289972450,"results":"53","hashOfConfig":"42"},{"size":12192,"mtime":1612019662972,"results":"54","hashOfConfig":"42"},{"size":1069,"mtime":1610291402716,"results":"55","hashOfConfig":"42"},{"size":1056,"mtime":1610129152892,"results":"56","hashOfConfig":"42"},{"size":118,"mtime":1610143118042,"results":"57","hashOfConfig":"42"},{"size":36215,"mtime":1610147753343,"results":"58","hashOfConfig":"42"},{"size":28427,"mtime":1610148957217,"results":"59","hashOfConfig":"42"},{"size":28147,"mtime":1610194707873,"results":"60","hashOfConfig":"42"},{"size":1795,"mtime":1612014788567,"results":"61","hashOfConfig":"42"},{"size":18788,"mtime":1612016672086,"results":"62","hashOfConfig":"42"},{"size":5851,"mtime":1612011021392,"results":"63","hashOfConfig":"42"},{"size":1081,"mtime":1610315598020,"results":"64","hashOfConfig":"42"},{"size":9092,"mtime":1612017096545,"results":"65","hashOfConfig":"42"},{"size":3761,"mtime":1611855442739,"results":"66","hashOfConfig":"42"},{"size":8709,"mtime":1611859013942,"results":"67","hashOfConfig":"42"},{"size":3734,"mtime":1611262852775,"results":"68","hashOfConfig":"42"},{"size":43,"mtime":1610355429685,"results":"69","hashOfConfig":"42"},{"size":52,"mtime":1610724377170,"results":"70","hashOfConfig":"42"},{"size":3382,"mtime":1611856795749,"results":"71","hashOfConfig":"42"},{"size":1199,"mtime":1610728359054,"results":"72","hashOfConfig":"42"},{"size":1498,"mtime":1611604514986,"results":"73","hashOfConfig":"42"},{"size":4013,"mtime":1612013693404,"results":"74","hashOfConfig":"42"},{"size":2071,"mtime":1611927960831,"results":"75","hashOfConfig":"42"},{"size":48,"mtime":1611353022718,"results":"76","hashOfConfig":"42"},{"size":46,"mtime":1611353438607,"results":"77","hashOfConfig":"42"},{"size":2033,"mtime":1611926659183,"results":"78","hashOfConfig":"42"},{"size":2441,"mtime":1611859982906,"results":"79","hashOfConfig":"42"},{"size":242,"mtime":1611856773222,"results":"80","hashOfConfig":"42"},{"size":2071,"mtime":1612013877423,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"z8dq48",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\index.tsx",[],["169","170"],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\reportWebVitals.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\App.tsx",["171","172"],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MoviesListPage\\index.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MoviesListPage\\MoviesListPage.tsx",["173"],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\Login\\index.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\Login\\Login.tsx",["174"],"import React, { Component, RefObject } from \"react\";\r\nimport './login.css';\r\nimport AuthenticationService from './../../services/AuthenticationService';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Form, Button, Checkbox } from \"semantic-ui-react\";\r\ntype LoginProps = {\r\n\r\n}\r\n// type LoginState = {\r\n//   loginError: boolean;\r\n// }\r\nclass Login extends Component<RouteComponentProps<LoginProps>, {}> {\r\n  userNameInput: RefObject<HTMLInputElement>;\r\n  passwordInput: RefObject<HTMLInputElement>;\r\n  authService: AuthenticationService;\r\n  constructor(props: RouteComponentProps<LoginProps>) {\r\n    super(props);\r\n    this.userNameInput = React.createRef();\r\n    this.passwordInput = React.createRef();\r\n    this.authService = new AuthenticationService();\r\n    // this.state = {\r\n    //   loginError: false\r\n    // }\r\n  }\r\n  handleFormSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    let username = this.userNameInput?.current?.value;\r\n    let password = this.passwordInput?.current?.value;\r\n    if (username && password) {\r\n      let loginResult = await this.authService.login(username, password);\r\n      if (loginResult) {\r\n        this.props.history.push('/');\r\n      }\r\n    }\r\n    // else {\r\n    //   this.setState({\r\n    //     loginError: true\r\n    //   });\r\n    // }\r\n  }\r\n  render = () => {\r\n    return (\r\n      <>\r\n        <div className=\"login-wrapper\">\r\n          <div className=\"login-content__wrapper\">\r\n            <div className=\"login-wrapper\">\r\n              <h2 className='login-header'>Login to your account</h2>\r\n               <Form onSubmit={this.handleFormSubmit}>\r\n                <Form.Field\r\n                  icon='user'\r\n                  iconPosition='left'>\r\n                  <label className=\"login-text\">Username</label>\r\n                  <input ref={this.userNameInput} placeholder='Username' />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label className=\"login-text\">Password</label>\r\n                  <input ref={this.passwordInput} type='password' placeholder='Password' />\r\n                </Form.Field>\r\n                <Button type='submit' color=\"blue\">Login</Button>\r\n              </Form>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* {this.state.loginError ? <div className=\"login-error\">invalid username or password</div> : ''} */}\r\n        {/* </div>\r\n          </div>\r\n        </form> */}\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\nexport default Login;\r\n","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\AuthenticationService.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\TmdbBaseService.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\DiscoverMoviesService.ts",["175"],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MoviesListPage\\MoviesList\\MoviesList.tsx",["176"],"import React from \"react\";\r\nimport { Grid } from 'semantic-ui-react';\r\nimport './moviesList.css';\r\nimport { MovieDiscoverDto } from './../../../models/MovieDiscoverDto';\r\n\r\nimport MoviesCard from \"../MoviesCard/MoviesCard\";\r\n\r\ntype MoviesListProps = {\r\n  movies: Array<MovieDiscoverDto>\r\n}\r\n\r\nexport default function MoviesList(props: MoviesListProps) {\r\n  return (\r\n    <div className=\"moviesList\">\r\n      <div className=\"allMovies\">\r\n          {props.movies.map((movie) => (\r\n              <MoviesCard key={movie.id} movie={movie}/>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MoviesListPage\\MoviesOrdering\\MoviesOrdering.tsx",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MoviesListPage\\SearchMovies\\SearchMovies.tsx",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\configuration\\configuration.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\configuration\\genres.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\models\\ReleaseTypes.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\configuration\\countries.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\configuration\\certification.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\configuration\\languages.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MoviesListPage\\MoviesCard\\MoviesCard.tsx",["177","178"],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MovieDetails\\MovieDetails.tsx",["179","180"],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\MovieDetailsService.ts",["181"],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\models\\MovieDetails\\ViewModels\\MovieDetailsViewModel.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\components\\Header\\Header.tsx",["182"],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\components\\Footer\\Footer.tsx",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\PersonPage\\PersonPage.tsx",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\PersonPageService.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\MovieDetails\\index.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\PopularPeoplePage\\index.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\PopularPeoplePage\\PopularPeoplePage.tsx",["183"],"import React, { Component } from 'react';\r\nimport './popularPeoplePage.css';\r\nimport PopularPeopleService from './../../services/PopularPeopleService';\r\nimport { Grid, Button } from 'semantic-ui-react';\r\nimport { PopularPeoplePageDto } from './../../models/PopularPeople/PopularPeoplePageResponseDto';\r\nimport { Link } from 'react-router-dom';\r\nimport defaultMovie from './../../assets/img/glyphicons-basic-38-picture-grey.svg'\r\nimport { posterUrl } from './../../configuration/configuration';\r\nimport Preloader from './../../components/Preloader/Preloader';\r\ntype PopularPeoplePageProps = {\r\n\r\n}\r\ntype PopularPeoplePageState = {\r\n  page: number;\r\n  persons: Array<PopularPeoplePageDto>;\r\n  total: number;\r\n  loading: boolean;\r\n}\r\nclass PopularPeoplePage extends Component<PopularPeoplePageProps, PopularPeoplePageState> {\r\n  popularPeopleService: PopularPeopleService;\r\n  constructor(props: PopularPeoplePageProps) {\r\n    super(props);\r\n    this.popularPeopleService = new PopularPeopleService();\r\n    this.state = {\r\n      page: 1,\r\n      persons: [],\r\n      total: 0,\r\n      loading: false,\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.updatePersons();\r\n  }\r\n\r\n  updatePersons = async () => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    let searchingPersons = await this.popularPeopleService.findPersons(this.state.page);\r\n    this.setState({\r\n      persons: searchingPersons.results,\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  handleLoadMoreClicked = async () => {\r\n    const nextPage = this.state.page + 1;\r\n    const searchingPersons = await this.popularPeopleService.findPersons(nextPage);\r\n    const allPersons = this.state.persons.concat(searchingPersons.results);\r\n    this.setState({\r\n      page: nextPage,\r\n      persons: allPersons,\r\n      total: searchingPersons.total_results\r\n    });\r\n  }\r\n\r\n  render = () => {\r\n    if (this.state.loading === true) {\r\n      return (<Preloader />)\r\n    }\r\n    else {\r\n      return (\r\n        <React.Fragment>\r\n          <h3 className=\"personPopular-heading\">Popular people</h3>\r\n          <div className=\"personPopular-container\">\r\n            {this.state.persons.map((person) => (\r\n              <Link to={`/person/${person.id}`}>\r\n                <div key={person.id} className=\"personPopular-card\">\r\n                  <div\r\n                    className=\"personPopular-image\"\r\n                    style={{\r\n                      backgroundImage: person.profile_path ?\r\n                        `url(${posterUrl}/w300${person.profile_path})` :\r\n                        `url(${defaultMovie})`\r\n                    }}\r\n                  ></div>\r\n                  <div className=\"personPopular-inform\">\r\n                    <div className=\"personPopular-name\">{person.name}</div>\r\n                    <div className=\"personPopular-popularFor\">\r\n                      <p className=\"personPopular-popularFor-text\">{person.known_for.map((movie) => (movie.title ? movie.title : movie.name)).join(', ')}</p></div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            ))}\r\n            <Button\r\n              className='more-people'\r\n              secondary\r\n              fluid\r\n              onClick={this.handleLoadMoreClicked}\r\n            >More popular people</Button>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default PopularPeoplePage;\r\n","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\PopularPeopleService.ts",["184"],"import axios, { AxiosResponse } from 'axios';\r\nimport TmdbBaseService from './TmdbBaseService';\r\nimport queryString from 'query-string';\r\nimport { PopularPeoplePageResponseDto } from '../models/PopularPeople/PopularPeoplePageResponseDto';\r\nimport { PopularPeoplePageRequestDto } from './../models/PopularPeople/PopularPeoplePageRequestDto';\r\nclass PopularPeopleService extends TmdbBaseService {\r\n  constructor() {\r\n    super();\r\n  }\r\n  findPersons = async (page : number): Promise<PopularPeoplePageResponseDto> => {\r\n    let url: string = this.addApiKey(`${this.baseUrl}/person/popular`);\r\n    const request: PopularPeoplePageRequestDto | null = this.createRequest(page);\r\n    if (request) {\r\n      let requestString = queryString.stringify(request, { skipNull: true, skipEmptyString: true });\r\n      url += `&${requestString}`;\r\n    }\r\n    let response: AxiosResponse<PopularPeoplePageResponseDto> = await axios.get<PopularPeoplePageResponseDto>(url);\r\n    return response.data;\r\n  }\r\n  createRequest = (page: number): PopularPeoplePageRequestDto => {\r\n    const request: PopularPeoplePageRequestDto = {\r\n      page: page,\r\n    }\r\n    return request;\r\n  }\r\n}\r\nexport default PopularPeopleService;\r\n","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\SearchService.ts",["185","186"],"import axios, { AxiosResponse } from 'axios';\r\nimport TmdbBaseService from './TmdbBaseService';\r\nimport queryString from 'query-string';\r\nimport { PopularPeoplePageResponseDto } from '../models/PopularPeople/PopularPeoplePageResponseDto';\r\nimport { PopularPeoplePageRequestDto } from './../models/PopularPeople/PopularPeoplePageRequestDto';\r\nimport { SearchResponseDto } from '../models/SearchResponseDto';\r\nimport { SearchRequestDto } from './../models/SearchRequestDto';\r\nimport { SearchResult } from './../models/SearchResponseDto';\r\n\r\nclass SearchService extends TmdbBaseService {\r\n\r\n  public findSearchResults = async (querySearch: string): Promise<SearchResponseDto> => {\r\n    let url: string = this.addApiKey(`${this.baseUrl}/search/multi`);\r\n    const request: SearchRequestDto | null = this.createRequest(querySearch);\r\n    if (request) {\r\n      let requestString = queryString.stringify(request, { skipNull: true, skipEmptyString: true });\r\n      url += `&${requestString}`;\r\n    }\r\n    let response: AxiosResponse<SearchResponseDto> = await axios.get<SearchResponseDto>(url);\r\n    response.data.results = response.data.results.filter((item: SearchResult) =>\r\n    item.media_type === 'movie' || item.media_type === 'person');\r\n    return response.data;\r\n  }\r\n\r\n  private createRequest = (querySearch: string): SearchRequestDto => {\r\n    const request: SearchRequestDto = {\r\n      query: querySearch,\r\n      page: 1,\r\n    }\r\n    return request;\r\n  }\r\n\r\n}\r\n\r\nexport default SearchService;\r\n","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\services\\AccountService.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\UserWatchlistPage\\UserWatchlistPage.tsx",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\UserWatchlistPage\\index.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\UserRatingsPage\\index.ts",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\UserRatingsPage\\UserRatingsPage.tsx",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\components\\ProfileMoviesCard\\ProfileMoviesCard.tsx",["187","188"],"import React, { Component } from 'react';\r\nimport defaultMovie from './../../assets/img/glyphicons-basic-38-picture-grey.svg';\r\nimport { posterUrl } from './../../configuration/configuration';\r\nimport './profileMoviesCard.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport { RatingDto } from './../../models/Account/RatingResponseDto';\r\n\r\ntype ProfileMoviesCardProps = {\r\n  movie: RatingDto;\r\n}\r\n\r\nexport default function ProfileMoviesCard(props: ProfileMoviesCardProps) {\r\n  const { movie } = props;\r\n  const dateFormatter = new Intl.DateTimeFormat(\"ru\");\r\n  return (\r\n    <>\r\n      {/* <Icon name='heart' color='red' size='large' link className='movieCard-like' />\r\n      <Icon name=\"bookmark\" color='red' size='large' link className='movieCard-watchList' /> */}\r\n      <Link to={`/movies/${movie.id}`}>\r\n        <div className=\"profileMovies-container\" key={movie.id}>\r\n          <img\r\n            className='profileMovies-poster'\r\n            src={`${posterUrl}/w185/${movie.poster_path}`}\r\n            onError={(e: any) => {\r\n              if (e.target.src !== defaultMovie) {\r\n                e.target.src = defaultMovie;\r\n              }\r\n            }}\r\n            alt=\"poster\" />\r\n          <div className=\"profileMovies-description\">\r\n            <div className='profileMovies-content'>\r\n              <div className='profileMovies-voting' style={{\r\n                borderColor:\r\n                  movie.vote_average >= 7 ? '#21d07a' :\r\n                    movie.vote_average >= 4 ? '#d2d531' :\r\n                      movie.vote_average > 0 ? '#cb215b' : '#666666'\r\n              }}>{`${movie.vote_average * 10}`}\r\n                <span className=\"percent\">%</span>\r\n              </div>\r\n              <div className=\"profileMovies-title\">\r\n                <div className=\"profileMovies-heading\">{movie.title}</div>\r\n                <div className=\"profileMovies-release\">\r\n                  {movie.release_date ? dateFormatter.format(new Date(movie.release_date)) : ''}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"profileMovies-overview\">\r\n              {movie.overview}\r\n            </div>\r\n            <div className=\"profileMovies-release\">\r\n              {movie.rating ? <><span className=\"profileMovies-rating\">{movie.rating}</span> Your rating</> : ''}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Link >\r\n    </>\r\n  )\r\n}\r\n","C:\\GitRepos\\rsclone\\tmdb-clone\\src\\components\\Preloader\\Preloader.tsx",[],"C:\\GitRepos\\rsclone\\tmdb-clone\\src\\features\\UserFavoritesPage\\UserFavoritesPage.tsx",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":12},{"ruleId":"193","severity":1,"message":"197","line":8,"column":3,"nodeType":"195","messageId":"196","endLine":8,"endColumn":11},{"ruleId":"193","severity":1,"message":"198","line":7,"column":18,"nodeType":"195","messageId":"196","endLine":7,"endColumn":22},{"ruleId":"193","severity":1,"message":"199","line":5,"column":24,"nodeType":"195","messageId":"196","endLine":5,"endColumn":32},{"ruleId":"200","severity":1,"message":"201","line":8,"column":3,"nodeType":"202","messageId":"203","endLine":10,"endColumn":4},{"ruleId":"193","severity":1,"message":"198","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"204","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":26},{"ruleId":"193","severity":1,"message":"205","line":7,"column":10,"nodeType":"195","messageId":"196","endLine":7,"endColumn":14},{"ruleId":"193","severity":1,"message":"206","line":2,"column":37,"nodeType":"195","messageId":"196","endLine":2,"endColumn":47},{"ruleId":"193","severity":1,"message":"207","line":12,"column":10,"nodeType":"195","messageId":"196","endLine":12,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":14,"column":3,"nodeType":"202","messageId":"203","endLine":16,"endColumn":4},{"ruleId":"193","severity":1,"message":"208","line":1,"column":28,"nodeType":"195","messageId":"196","endLine":1,"endColumn":40},{"ruleId":"193","severity":1,"message":"198","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":14},{"ruleId":"200","severity":1,"message":"201","line":7,"column":3,"nodeType":"202","messageId":"203","endLine":9,"endColumn":4},{"ruleId":"193","severity":1,"message":"209","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":38},{"ruleId":"193","severity":1,"message":"210","line":5,"column":10,"nodeType":"195","messageId":"196","endLine":5,"endColumn":37},{"ruleId":"193","severity":1,"message":"204","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":26},{"ruleId":"193","severity":1,"message":"205","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":14},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Grid' is defined but never used.","'Checkbox' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Component' is defined but never used.","'Icon' is defined but never used.","'RouteProps' is defined but never used.","'RatingDto' is defined but never used.","'ReactElement' is defined but never used.","'PopularPeoplePageResponseDto' is defined but never used.","'PopularPeoplePageRequestDto' is defined but never used.","no-global-assign","no-unsafe-negation"]